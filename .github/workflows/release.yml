name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.ref_name }}
          token: ${{ secrets.TOKEN }}
          repository: ${{ secrets.REPOSITORY }}
          github-server-url: ${{ secrets.SERVER_URL }}

      - name: Download Quorum Binary for macos
        if: matrix.platform == 'macos-latest'
        run: |
          curl -L "https://unpkg.com/quorum-bin@2.0.3/quorum_darwin" -o ./frontend/src-tauri/binaries/quorum-x86_64-apple-darwin --create-dirs
          chmod +x ./frontend/src-tauri/binaries/quorum-x86_64-apple-darwin

      - name: Download Quorum Binary and Dependencies for linux
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev
          curl -L "https://unpkg.com/quorum-bin@2.0.3/quorum_linux" -o ./frontend/src-tauri/binaries/quorum-x86_64-unknown-linux-gnu --create-dirs
          chmod +x ./frontend/src-tauri/binaries/quorum-x86_64-unknown-linux-gnu

      - name: Download Quorum Binary for windows
        if: matrix.platform == 'windows-latest'
        run: |
          curl -L "https://unpkg.com/quorum-bin@2.0.3/quorum_win.exe" -o ./frontend/src-tauri/binaries/quorum-x86_64-pc-windows-msvc.exe --create-dirs

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './frontend/src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          cache-dependency-path: './frontend/yarn.lock'

      - name: Install frontend dependencies
        working-directory: './frontend'
        run: yarn install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Heatwave v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          projectPath: './frontend'

